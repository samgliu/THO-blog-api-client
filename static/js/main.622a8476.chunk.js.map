{"version":3,"sources":["context/GlobalState.js","components/http-common.js","components/Header.js","components/Footer.js","components/Post.js","components/Posts.js","components/Home.js","components/Comments.js","components/NewComment.js","components/PostDetail.js","components/NewPost.js","components/SignUp.js","components/SignIn.js","components/Upgrade.js","components/MyRoutes.js","App.js","index.js"],"names":["initialState","GlobalContext","createContext","GlobalProvider","children","useState","user","setUser","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","Provider","value","doesHttpOnlyCookieExist","cookiename","d","Date","setTime","getTime","expires","toUTCString","document","cookie","indexOf","require","config","axios","create","baseURL","process","headers","Header","useContext","e","a","preventDefault","localStorage","removeItem","apiClient","get","to","Firstname","Lastname","onClick","Footer","Post","post","deletePostLocal","navigate","useNavigate","id","target","parentElement","deletePost","params","delete","withCredentials","status","_id","className","Topic","Content","User","Timestamp","substring","Posts","posts","setPosts","useEffect","res","result","statusText","data","getPostsData","postRender","newPosts","filter","map","Home","props","JSON","parse","getItem","Comments","comments","deleteCommentLocal","useParams","commentDeleteHandler","cid","deleteComment","comment","Name","commentRender","NewComment","pid","handlePostCommentData","name","content","type","placeholder","onChange","required","rows","maxLength","handleSubmitOnClick","PostDetail","setPost","setComments","newComments","toString","n","c","postCommentData","cmt","NewPost","errors","setErrors","topic","state","setState","validator","handleChange","newPostPostData","console","log","SignUp","firstname","lastname","username","email","password","confirm","signUpPostData","SignIn","signInPostData","setItem","stringify","Upgrade","admin_password","upgradePostData","put","MyRoutes","exact","path","element","App","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.622a8476.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst initialState = [];\n\nexport const GlobalContext = createContext(initialState);\n\nexport const GlobalProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    function doesHttpOnlyCookieExist(cookiename) {\n        var d = new Date();\n        d.setTime(d.getTime() + 1000);\n        var expires = 'expires=' + d.toUTCString();\n\n        document.cookie = cookiename + '=new_value;path=/;' + expires;\n        return document.cookie.indexOf(cookiename + '=') === -1;\n    }\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                user,\n                setUser,\n                isLoggedIn,\n                setIsLoggedIn,\n                isAdmin,\n                setIsAdmin,\n                doesHttpOnlyCookieExist,\n            }}\n        >\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n","import axios from 'axios';\nrequire('dotenv').config();\nexport default axios.create({\n    //baseURL: `http://${process.env.REACT_APP_BLOG_API}`,\n    baseURL: process.env.REACT_APP_BLOG_API,\n    headers: {\n        'Content-type': 'application/json',\n    },\n});\n","import { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport apiClient from './http-common';\n\nfunction Header() {\n    const { user, setUser, isLoggedIn, setIsLoggedIn, isAdmin, setIsAdmin } =\n        useContext(GlobalContext);\n    //const navigate = useNavigate();\n\n    async function handleLogOut(e) {\n        e.preventDefault();\n        setUser(null);\n        setIsLoggedIn(false);\n        setIsAdmin(false);\n        localStorage.removeItem('blogUser');\n        await apiClient.get('/logout');\n    }\n\n    return (\n        <header>\n            <Link to=\"/\">\n                <h1>My Personal Blog</h1>\n            </Link>\n            {isLoggedIn && user !== null ? (\n                <ul>\n                    <li>\n                        Welcome back {user.Firstname} {user.Lastname}\n                    </li>\n                    {isAdmin ? (\n                        <li>Admin</li>\n                    ) : (\n                        <li>\n                            <Link to=\"/upgrade\">\n                                <p>Upgrade</p>\n                            </Link>\n                        </li>\n                    )}\n\n                    <li>\n                        <Link to=\"/\" onClick={handleLogOut}>\n                            <p>Sign Out</p>\n                        </Link>\n                    </li>\n                </ul>\n            ) : (\n                <ul>\n                    <li>\n                        <Link to=\"/signup\">\n                            <p>Sign Up</p>\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/signin\">\n                            <p>Sign In</p>\n                        </Link>\n                    </li>\n                </ul>\n            )}\n        </header>\n    );\n}\n\nexport default Header;\n","//import { useContext, useEffect, useState } from 'react';\n\nfunction Footer() {\n    return <div></div>;\n}\n\nexport default Footer;\n","import { Link, useNavigate } from 'react-router-dom';\n//import { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { useContext } from 'react';\nimport axios from 'axios';\n\nfunction Post({ post, deletePostLocal }) {\n    const { isAdmin } = useContext(GlobalContext);\n    const navigate = useNavigate();\n    async function handleDeleteOnClick(e) {\n        e.preventDefault();\n        const id = e.target.parentElement.parentElement.id;\n        await deletePost(id);\n        deletePostLocal(id);\n    }\n    async function deletePost(id) {\n        try {\n            const params = `/${id}/delete`;\n            const res = await axios.delete(\n                params,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                },\n                { withCredentials: true }\n            );\n            if (res.status === 200) {\n                navigate('/');\n            }\n        } catch (err) {\n            //setPosts(fortmatResponse(err.response?.data || err));\n        }\n    }\n    return (\n        <Link to={`${post._id}`}>\n            <div className=\"post-container\" id={post._id}>\n                <div className=\"post-header\">\n                    <div></div>\n                    <h4>{post.Topic}</h4>\n                    {isAdmin ? (\n                        <button\n                            className=\"delete-btn\"\n                            onClick={handleDeleteOnClick}\n                        >\n                            Delete\n                        </button>\n                    ) : (\n                        <div></div>\n                    )}\n                </div>\n\n                <p className=\"content-preview\">{post.Content}</p>\n                <div className=\"author-container\">\n                    <h6>\n                        {post.User.Firstname} {post.User.Lastname}{' '}\n                    </h6>\n                    <p>{post.Timestamp.substring(0, 10)}</p>\n                </div>\n            </div>\n        </Link>\n    );\n}\n\nexport default Post;\n","//import { Link } from 'react-router-dom';\nimport Post from './Post';\nimport apiClient from './http-common';\nimport { useEffect, useState } from 'react';\n\nfunction Posts() {\n    const [posts, setPosts] = useState([]);\n    /*\n    const fortmatResponse = (res) => {\n        return JSON.stringify(res, null, 2);\n    };\n    */\n    useEffect(() => {\n        async function getPostsData() {\n            try {\n                const res = await apiClient.get('/posts');\n                const result = {\n                    status: res.status + '-' + res.statusText,\n                    headers: res.headers,\n                    data: res.data,\n                };\n                setPosts(result.data);\n            } catch (err) {\n                //setPosts(fortmatResponse(err.response?.data || err));\n            }\n        }\n        getPostsData();\n    }, [setPosts]); // dependency\n    function deletePostLocal(id) {\n        const newPosts = posts.filter((post) => post._id !== id);\n        setPosts(newPosts);\n    }\n    const postRender = (post) => {\n        return (\n            <Post\n                post={post}\n                key={post._id}\n                deletePostLocal={(id) => deletePostLocal(id)}\n            />\n        );\n    };\n\n    if (posts) {\n        return (\n            <div className=\"posts-container\">\n                {posts.map((post) => postRender(post))}\n            </div>\n        );\n    } else {\n        return <div></div>;\n    }\n}\n\nexport default Posts;\n","import Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport Posts from '../components/Posts';\nimport { Link } from 'react-router-dom';\nimport { useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction Home(props) {\n    const { setUser, setIsLoggedIn, setIsAdmin, isAdmin } =\n        useContext(GlobalContext);\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem('blogUser'));\n        if (user !== null) {\n            setIsLoggedIn(true);\n            setUser(user);\n            setIsAdmin(user.isAdmin);\n        }\n    }, [setUser, setIsLoggedIn]);\n    return (\n        <div>\n            <Header />\n            {isAdmin ? (\n                <Link to=\"/create-post\" className=\"link-new-post\">\n                    Create New Post\n                </Link>\n            ) : (\n                <div></div>\n            )}\n\n            <Posts />\n            <Footer />\n        </div>\n    );\n}\n\nexport default Home;\n","//import { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport axios from 'axios';\n\nfunction Comments({ comments, deleteCommentLocal }) {\n    const { isAdmin } = useContext(GlobalContext);\n    const id = useParams().id;\n    const navigate = useNavigate();\n    async function commentDeleteHandler(e) {\n        e.preventDefault();\n        const cid = e.target.parentElement.parentElement.id;\n        await deleteComment(cid);\n        deleteCommentLocal(cid);\n    }\n    function commentRender(comment) {\n        return (\n            <div\n                key={comment._id}\n                id={comment._id}\n                className=\"comment-container\"\n            >\n                <div>\n                    <h6>{comment.Name}</h6>\n                    <p className=\"time\">{comment.Timestamp.substring(0, 10)}</p>\n                </div>\n                <div className=\"comment-wrapper\">\n                    <p>{comment.Content}</p>\n                    {isAdmin ? (\n                        <button\n                            className=\"delete-btn\"\n                            onClick={commentDeleteHandler}\n                        >\n                            Delete\n                        </button>\n                    ) : (\n                        <div></div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n    async function deleteComment(cid) {\n        try {\n            const params = `/${id}/comment/${cid}/delete`;\n            const res = await axios.delete(\n                params,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                },\n                { withCredentials: true }\n            );\n            if (res.status === 200) {\n                navigate(`/${id}`);\n            }\n        } catch (err) {\n            //setPosts(fortmatResponse(err.response?.data || err));\n        }\n    }\n    return (\n        <div className=\"comments-container\">\n            {comments.map((comment) => commentRender(comment))}\n        </div>\n    );\n}\n\nexport default Comments;\n","//import { useContext, useEffect, useState } from 'react';\n//import apiClient from './http-common';\n\nfunction NewComment({ pid, handlePostCommentData }) {\n    let name = '';\n    let content = '';\n\n    function handleSubmitOnClick(e) {\n        e.preventDefault();\n        if (name !== '' && content !== '') {\n            handlePostCommentData(name, content);\n        }\n    }\n\n    return (\n        <form>\n            <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"Name\"\n                onChange={(e) => {\n                    name = e.target.value;\n                }}\n                required\n            />\n\n            <textarea\n                type=\"text\"\n                rows=\"4\"\n                maxLength=\"200\"\n                id=\"content\"\n                name=\"content\"\n                placeholder=\"Write comments here...\"\n                onChange={(e) => {\n                    content = e.target.value;\n                }}\n                required\n            />\n            <button\n                type=\"submit\"\n                value=\"Submit\"\n                onClick={(e) => handleSubmitOnClick(e)}\n            >\n                Comment\n            </button>\n        </form>\n    );\n}\n\nexport default NewComment;\n","import {} from 'react-router-dom';\nimport Header from '../components/Header';\nimport Comments from '../components/Comments';\nimport NewComment from '../components/NewComment';\nimport { useParams } from 'react-router-dom';\nimport apiClient from './http-common';\nimport { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction PostDetail() {\n    const id = useParams().id;\n    const [post, setPost] = useState([]);\n    const [comments, setComments] = useState([]);\n    const { setUser, setIsLoggedIn, setIsAdmin } = useContext(GlobalContext);\n    /*\n    const fortmatResponse = (res) => {\n        return JSON.stringify(res, null, 2);\n    };\n    */\n    useEffect(() => {\n        async function getPostsData() {\n            try {\n                const res = await apiClient.get(`/${id}`);\n                const result = {\n                    status: res.status + '-' + res.statusText,\n                    headers: res.headers,\n                    data: res.data,\n                };\n                //console.log(res);\n                setPost(result.data);\n                setComments(result.data.Comments);\n            } catch (err) {\n                //setPosts(fortmatResponse(err.response?.data || err));\n            }\n        }\n        getPostsData();\n        const user = JSON.parse(localStorage.getItem('blogUser'));\n        if (user !== null) {\n            setIsLoggedIn(true);\n            setUser(user);\n            setIsAdmin(user.isAdmin);\n        }\n    }, [id, setPost, setComments, setUser, setIsLoggedIn, setIsAdmin]); // dependency\n\n    async function postCommentData(name, content) {\n        try {\n            const res = await apiClient.post(\n                `/${id}/comment-create?name=${name}&content=${content}`\n            );\n            let newComments = [\n                ...comments,\n                {\n                    Name: name,\n                    Content: content,\n                    Timestamp: new Date().toString(),\n                    _id: res.data._id,\n                },\n            ];\n            setComments(newComments);\n        } catch (err) {\n            //setPosts(fortmatResponse(err.response?.data || err));\n        }\n    }\n\n    function deleteCommentLocal(cid) {\n        const newComments = comments.filter((cmt) => cmt._id !== cid);\n        setComments(newComments);\n    }\n\n    if (post && post.User) {\n        return (\n            <div>\n                <Header />\n                <div className=\"post-detail-container\" id={id}>\n                    <div className=\"post-header\">\n                        <div></div>\n                        <h4>{post.Topic}</h4>\n                        {/*isAdmin ? (\n                            <button className=\"delete-btn\">Delete</button>\n                        ) : (\n                            <div></div>\n                        )*/}\n                        <div></div>\n                    </div>\n\n                    <div className=\"author-container\">\n                        <h6>\n                            {post.User.Firstname} {post.User.Lastname}{' '}\n                        </h6>\n                        <p>{post.Timestamp.substring(0, 10)}</p>\n                    </div>\n                    <p>{post.Content}</p>\n                    <NewComment\n                        pid={id}\n                        handlePostCommentData={(n, c) => postCommentData(n, c)}\n                    />\n                    <Comments\n                        comments={comments}\n                        deleteCommentLocal={(cid) => deleteCommentLocal(cid)}\n                    />\n                </div>\n            </div>\n        );\n    } else {\n        return <div></div>;\n    }\n}\n\nexport default PostDetail;\n","import { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { useContext, useEffect, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport axios from 'axios';\n\nfunction NewPost() {\n    const [errors, setErrors] = useState(null);\n    const [state, setState] = useState({\n        topic: '',\n        content: '',\n    });\n    const { setUser, setIsLoggedIn, setIsAdmin } = useContext(GlobalContext);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem('blogUser'));\n        if (user !== null) {\n            setIsLoggedIn(true);\n            setUser(user);\n            setIsAdmin(user.isAdmin);\n        }\n    }, [setUser, setIsLoggedIn]);\n    function validator() {\n        //console.log(state);\n        if (state.topic === '' || state.content === '') {\n            setErrors('Some field is empty!');\n        } else {\n            setErrors(null);\n            return true;\n        }\n    }\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        });\n    }\n    async function handleSubmitOnClick(e) {\n        e.preventDefault();\n        if (validator()) {\n            await newPostPostData();\n        } else {\n            console.log(state);\n        }\n    }\n    async function newPostPostData() {\n        try {\n            const params = `/create-post?topic=${state.topic}&content=${state.content}`;\n            const res = await axios.post(\n                params,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                },\n                { withCredentials: true }\n            );\n            if (res.status === 200) {\n                navigate('/');\n            }\n        } catch (err) {\n            //setPosts(fortmatResponse(err.response?.data || err));\n        }\n    }\n    return (\n        <div>\n            <Header />\n            <form className=\"sign-up-form-container\">\n                <h3>New Post</h3>\n                {errors !== null ? (\n                    <div className=\"error\">{errors}</div>\n                ) : (\n                    <div></div>\n                )}\n\n                <div className=\"form-group\">\n                    <label>Topic</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Topic\"\n                        name=\"topic\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Content</label>\n                    <textarea\n                        type=\"text\"\n                        name=\"content\"\n                        rows=\"10\"\n                        placeholder=\"Enter content\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <button type=\"submit\" onClick={(e) => handleSubmitOnClick(e)}>\n                    Post\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default NewPost;\n","import { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { useState } from 'react';\nimport apiClient from './http-common';\n\nfunction SignUp() {\n    const [errors, setErrors] = useState(null);\n    const [state, setState] = useState({\n        firstname: '',\n        lastname: '',\n        username: '',\n        email: '',\n        password: '',\n        confirm: '',\n    });\n    const navigate = useNavigate();\n\n    function validator() {\n        //console.log(state);\n        if (\n            state.firstname === '' ||\n            state.lastname === '' ||\n            state.username === '' ||\n            state.email === '' ||\n            state.password === '' ||\n            state.confirm === ''\n        ) {\n            setErrors('Some field is empty!');\n        } else if (state.confirm !== state.password) {\n            setErrors('Password confirmation does not match!');\n        } else {\n            setErrors(null);\n            return true;\n        }\n    }\n\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        });\n    }\n\n    async function handleSubmitOnClick(e) {\n        e.preventDefault();\n        if (validator()) {\n            await signUpPostData();\n        } else {\n            console.log(state);\n        }\n    }\n\n    async function signUpPostData() {\n        try {\n            const params = `/signup?firstname=${state.firstname}&lastname=${state.lastname}&username=${state.username}&email=${state.email}&password=${state.password}&confirm=${state.confirm}`;\n            const res = await apiClient.post(params);\n            if (res.status === 200) {\n                navigate('/signin');\n            }\n        } catch (err) {\n            //setPosts(fortmatResponse(err.response?.data || err));\n        }\n    }\n\n    return (\n        <div>\n            <Header />\n            <form className=\"sign-up-form-container\">\n                <h3>Sign Up</h3>\n                {errors !== null ? (\n                    <div className=\"error\">{errors}</div>\n                ) : (\n                    <div></div>\n                )}\n\n                <div className=\"form-group\">\n                    <label>First name</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"First name\"\n                        name=\"firstname\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Last name</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Last name\"\n                        name=\"lastname\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>User name</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"User name\"\n                        name=\"username\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Email address</label>\n                    <input\n                        type=\"email\"\n                        placeholder=\"Enter email\"\n                        name=\"email\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        onChange={handleChange}\n                        required\n                    />\n                    <label>Confirm Password</label>\n                    <input\n                        type=\"password\"\n                        name=\"confirm\"\n                        placeholder=\"Confirm password\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <button type=\"submit\" onClick={(e) => handleSubmitOnClick(e)}>\n                    Sign Up\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default SignUp;\n","import { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport axios from 'axios';\n\nfunction SignIn() {\n    const [errors, setErrors] = useState(null);\n    const [state, setState] = useState({\n        username: '',\n        password: '',\n    });\n    const { setUser, setIsLoggedIn } = useContext(GlobalContext);\n    const navigate = useNavigate();\n    function validator() {\n        //console.log(state);\n        if (state.username === '' || state.password === '') {\n            setErrors('Some field is empty!');\n        } else {\n            setErrors(null);\n            return true;\n        }\n    }\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        });\n    }\n    async function handleSubmitOnClick(e) {\n        e.preventDefault();\n        if (validator()) {\n            await signInPostData();\n        } else {\n            console.log(state);\n        }\n    }\n    async function signInPostData() {\n        try {\n            const params = `/signin?username=${state.username}&password=${state.password}`;\n            const res = await axios.post(\n                params,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                },\n                { withCredentials: true }\n            );\n            if (res.status === 200) {\n                setIsLoggedIn(true);\n                setUser(res.data);\n                localStorage.setItem('blogUser', JSON.stringify(res.data));\n                navigate('/');\n            }\n        } catch (err) {\n            //setPosts(fortmatResponse(err.response?.data || err));\n        }\n    }\n    return (\n        <div>\n            <Header />\n            <form className=\"sign-up-form-container\">\n                <h3>Sign In</h3>\n                {errors !== null ? (\n                    <div className=\"error\">{errors}</div>\n                ) : (\n                    <div></div>\n                )}\n\n                <div className=\"form-group\">\n                    <label>User name</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"User name\"\n                        name=\"username\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter password\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <button type=\"submit\" onClick={(e) => handleSubmitOnClick(e)}>\n                    Sign In\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default SignIn;\n","import { useNavigate } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { useContext, useState } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport axios from 'axios';\n\nfunction Upgrade() {\n    const [errors, setErrors] = useState(null);\n    const [state, setState] = useState({\n        admin_password: '',\n    });\n    const { setUser, setIsLoggedIn, setIsAdmin } = useContext(GlobalContext);\n    const navigate = useNavigate();\n    function validator() {\n        //console.log(state);\n        if (state.admin_password === '') {\n            setErrors('Some field is empty!');\n        } else {\n            setErrors(null);\n            return true;\n        }\n    }\n    function handleChange(e) {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        });\n    }\n    async function handleSubmitOnClick(e) {\n        e.preventDefault();\n        if (validator()) {\n            await upgradePostData();\n        } else {\n            console.log(state);\n        }\n    }\n    async function upgradePostData() {\n        try {\n            const params = `/upgrade-admin?admin_password=${state.admin_password}`;\n            const res = await axios.put(\n                params,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                },\n                { withCredentials: true }\n            );\n            if (res.status === 200) {\n                setIsLoggedIn(true);\n                setIsAdmin(true);\n                setUser(res.data);\n                localStorage.setItem('blogUser', JSON.stringify(res.data));\n                navigate('/');\n            }\n        } catch (err) {\n            //setPosts(fortmatResponse(err.response?.data || err));\n        }\n    }\n    return (\n        <div>\n            <Header />\n            <form className=\"sign-up-form-container\">\n                <h3>Upgrade to Admin</h3>\n                {errors !== null ? (\n                    <div className=\"error\">{errors}</div>\n                ) : (\n                    <div></div>\n                )}\n\n                <div className=\"form-group\">\n                    <label>Admin Password</label>\n                    <input\n                        type=\"password\"\n                        name=\"admin_password\"\n                        placeholder=\"Enter password\"\n                        onChange={handleChange}\n                        required\n                    />\n                </div>\n\n                <button type=\"submit\" onClick={(e) => handleSubmitOnClick(e)}>\n                    Upgrade\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default Upgrade;\n","import { HashRouter, Routes, Route } from 'react-router-dom';\nimport Home from './Home';\nimport PostDetail from './PostDetail';\nimport NewPost from './NewPost';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\nimport Upgrade from './Upgrade';\n\nconst MyRoutes = () => {\n    return (\n        <HashRouter>\n            <Routes>\n                <Route exact path=\"/\" element={<Home />} />\n                <Route exact path=\"/signup\" element={<SignUp />} />\n                <Route exact path=\"/signin\" element={<SignIn />} />\n                <Route exact path=\"/upgrade\" element={<Upgrade />} />\n                <Route exact path=\"/create-post\" element={<NewPost />} />\n                <Route exact path=\"/:id\" element={<PostDetail />} />\n            </Routes>\n        </HashRouter>\n    );\n};\n\nexport default MyRoutes;\n","import React, { Component } from 'react';\nimport MyRoutes from './components/MyRoutes';\nimport { GlobalProvider } from './context/GlobalState';\n\nclass App extends Component {\n    render() {\n        return (\n            <GlobalProvider>\n                <MyRoutes />\n            </GlobalProvider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './style/index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}